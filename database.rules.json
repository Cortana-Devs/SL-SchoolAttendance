{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth != null",
        ".write": "(auth != null && !data.exists()) || (auth != null && auth.uid === $uid) || (auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin')"
      },
      ".read": "auth != null",
      ".write": "auth != null"
    },
    "students": {
      ".read": "auth != null",
      ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
      ".indexOn": ["grade", "name", "class"]
    },
    "attendance": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
      ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
      ".indexOn": ["date", "class", "grade"],
      "$date": {
        ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
        ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
        "$classId": {
          ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
          ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
          "records": {
            ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
            "$studentId": {
              ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
              ".validate": "newData.hasChildren(['present', 'timestamp', 'markedBy', 'markedTime'])"
            }
          },
          "id": { ".validate": "newData.isString()" },
          "date": { ".validate": "newData.isString()" },
          "class": { ".validate": "newData.isString()" },
          "grade": { ".validate": "newData.isString()" },
          "lastModified": { ".validate": "newData.isNumber()" },
          "totalPresent": { ".validate": "newData.isNumber()" },
          "totalAbsent": { ".validate": "newData.isNumber()" }
        }
      }
    },
    "stats": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
      ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
      "cached": {
        "$key": {
          ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
          ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || root.child('users').child(auth.uid).child('role').val() === 'teacher')",
          ".validate": "newData.hasChildren(['data', 'timestamp'])",
          "data": {
            ".validate": "newData.hasChildren(['totalDays', 'totalPresent', 'totalAbsent', 'averageAttendance'])"
          },
          "timestamp": {
            ".validate": "newData.isNumber() && newData.val() <= now"
          }
        }
      },
      "daily": {
        ".indexOn": ["date"]
      },
      "monthly": {
        ".indexOn": ["year", "month"]
      }
    }
  }
} 